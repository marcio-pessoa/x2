#!/usr/bin/php
<?php
/******************************************************************************
 *
 * csv2png
 *
 * Version:
 * 2013-11-24 - Image basic filter optimization
 * 2013-11-23 - Command line options correction
 * 2013-11-22 - Scratch version
 *
 * Marcio Pessoa <marcio.pessoa@sciemon.com>
 *
 *****************************************************************************/


/******************************************************************************
 * 
 * To do list
 * 
 * - Verify files before read or/and write
 * 
 *****************************************************************************/


/******************************************************************************
 *
 * Variables definition
 *
 *****************************************************************************/

// Program information
{
	$ProgramName = "csv2png";
	$ProgramDescription="Convert a CSV file from Depp Viewer into a PNG image.";
	$ProgramVersion = "0.01b";
	$ProgramYear = "2013";
	$ContactInformation = "marcio.pessoa@sciemon.com";
}

// General variables
{
	$OK = 0;
	$Warning = 1;
	$Critical = 2;
	$Unknown = 3;
	
	$max_depth = 0;
}

// Input options variables
{
	// Define short command line options (unix)
	$shortopts  = "h";
	$shortopts .= "V";
	$shortopts .= "d";
	$shortopts .= "i:";
	$shortopts .= "o:";

	// Define long command line options (ANSI)
	$longopts = array("help",
			  "version",
			  "debug",
			  "csvfile:",
			  "pngfile:");
}

// Input parameters
{
	// Get command line options
	$options = getopt($shortopts, $longopts);
	if (!is_array($options) ) { 
		$help = true;
	} 

	// Variable: $debug (bool)
	$debug = ( isset($options['d']) || isset($options['debug']) ) ? true : false;
	
	// Variable: $help (bool)
	$help = ( isset($options['h']) || isset($options['help']) ) ? true : false;
	
	// Variable: $version (bool)
	$version = ( isset($options['V']) || isset($options['version']) ) ? true : false;
	
	// Variable: $csvfile (string)
	$csvfile = ( isset($options['i'] )) ? $options['i'] : null;
	$csvfile = ( isset($options['csvfile'] )) ? $options['csvfile'] : $csvfile;

	// Variable: $pngfile (string)
	$pngfile = ( isset($options['o'] )) ? $options['o'] : null;
	$pngfile = ( isset($options['pngfile'] )) ? $options['pngfile'] : $pngfile;
}

// Debug information
if ($debug) {
	if ($debug) print("Show debug: " . $debug . "\n");
	if ($help) print("Show help: " . $help . "\n");
	if ($version) print("Show version: " . $version . "\n");
	if ($csvfile) print("CSV file: " . $csvfile . "\n");
	if ($pngfile) print("PNG file: " . $pngfile . "\n");
}

// Help and usage information
if ($help) {
	show_usage ();
	print("\n");
	show_version ();
	exit ($OK);
}

// Version information
if ($version) {
	show_version ();
	exit ($OK);
}

// Get image resolution
if ($csvfile) {
	$csv_content = read_CSV($csvfile);
	//~ print_r($csv_content);
	$csv_content_last_register = count($csv_content) - 2;
	$x = $csv_content[$csv_content_last_register][0];
	$y = $csv_content[$csv_content_last_register][1];
	if ($debug) print("Image resolution: " . $x . "x" . $y . " pixels\n");
  $x=299;
  $y=199;
}

// Get maximum depth
if ($csvfile) {
	for ($i = 0; $i <= $csv_content_last_register; $i++) {
		$max_depth = ($max_depth > $csv_content[$i][2]) ? 
		              $max_depth : $csv_content[$i][2];
	}
	if ($debug) print("Maximum depth: " . $max_depth . "\n");
}

// Generate output image
if ($pngfile) {
	$gd = imagecreatetruecolor($x, $y);
		
	for ($i = 0; $i <= $csv_content_last_register; $i++) {
		$x = $csv_content[$i][0];
		$y = $csv_content[$i][1];
		$depth = $csv_content[$i][2];
		
		$color = imagecolorallocate($gd, $depth, $depth, $depth); 
		
		imagesetpixel($gd, $x, $y, $color);
	}
	imagefilter ($gd, IMG_FILTER_GRAYSCALE);
	imagefilter ($gd, IMG_FILTER_NEGATE);
	imagepng ($gd, $pngfile, 0, PNG_NO_FILTER);
	return($OK);
}

// If nothing was defined.
show_usage ();


/******************************************************************************
 *
 * Functions definition
 *
 *****************************************************************************/

// 
function show_usage () {
	global $ProgramName;
	global $ProgramDescription;
	global $ContactInformation;
	
	print("$ProgramDescription

Usage: $ProgramName -H [HOST] -u [URL]

Options:
  -i, --csvfile             input file (CSV)
  -o, --pngfile             output file (PNG)
  -h, --help                display this help and exit
  -V, --version             output version information and exit
  -d, --debug               show debug messages

Examples:
  $ProgramName -i example.csv -o example.png
  $ProgramName --csvfile example.csv --pngfile example.csv --debug
");
}

// 
function show_version () {
	global $ProgramName;
	global $ProgramVersion;
	global $ProgramYear;
	global $ContactInformation;

	print("$ProgramName $ProgramVersion
Copyright (C) $ProgramYear Sciemon Technologies.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Report $ProgramName bugs to <$ContactInformation>
");
}

//
function read_CSV($file){
	$file_handle = fopen($file, 'r');
	while (!feof($file_handle) ) {
		$line_of_text[] = fgetcsv($file_handle, 1024);
	}
	fclose($file_handle);
	return $line_of_text;
}
?>
